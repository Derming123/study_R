install.packages("C:/Users/gaosp/AppData/Local/Temp/downloaded_packages/rlang_0.1.4.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/gaosp/AppData/Local/Temp/downloaded_packages/org.Hs.eg.db_3.5.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/gaosp/AppData/Local/Temp/downloaded_packages/GO.db_3.5.0.tar.gz", repos = NULL, type = "source")
library(AnnotationHub)
hub <- AnnotationHub()
q <- query(hub,"vibrio")
q
id <- q$ah_id[length(q)]
id <- q$ah_id[5]
id <- q$ah_id[6]
vp <- hub[[id]]
vp <- hub[[id]]
?hub
vp <- hub[[id]]
vp <- hub[[id]]
BiocInstaller::biocLite("seqcombo")
library(seqcombo)
fas <- list.files(system.file("examples","GVariation",package = "seqcombo"))
fa
fas
fas <- list.files(system.file("examples","GVariation",package = "seqcombo"),pattern="fas",full.names = TRUE)
fas
x <- seqdiff(fas[1])
plot(x)
plot
x
View(x)
rvcheck::update_all()
rvcheck::update_all()
devtools::install_github("GuangchuangYu/ggimage")
devtools::install_github("GuangchuangYu/ggimage")
devtools::install_github("GuangchuangYu/ggimage")
devtools::install_github("GuangchuangYu/ggimage")
devtools::install_github("GuangchuangYu/ggimage")
devtools::install_github("GuangchuangYu/ggplotify")
devtools::install_github("GuangchuangYu/yyplot")
devtools::install_github("GuangchuangYu/ggplotify")
devtools::install_github("GuangchuangYu/yyplot")
devtools::install_github("GuangchuangYu/ggplotify")
devtools::install_github("GuangchuangYu/yyplot")
library(ggplotify)
devtools::install_github("GuangchuangYu/yyplot")
BiocInstaller::biocLite("msa")
BiocInstaller::biocLite("biobase")
install.packages("biobase")
BiocInstaller::biocLite("Biobase")
rvcheck::update_all()
rvcheck::update_all()
rvcheck::update_all()
install.packages("C:/Users/gaosp/AppData/Local/Temp/RtmpQBivgq/downloaded_packages/yaml_2.1.19.tar.gz", repos = NULL, type = "source")
rvcheck::update_all()
Sys.getenv("PATH")
Sys.getenv("BINPREF")
Sys.setenv(BINPREF="D:/R/Rtools/mingw_64/bin")
rvcheck::update_all()
knitr::opts_chunk$set(echo = TRUE)
#install.packages("pheatmap")
require(pheatmap)
df<-read.table("easy_input.txt",header = T, row.names = 1,as.is = 1)
annotation_col = data.frame(group = factor(rep(c("group1","group2"),c(6,12))))
rownames(annotation_col) = colnames(df)
ann_colors = list(Stage = c(group1 = "#FFFFCC", group2 = "#FEFF23"))
p1<-pheatmap(df,method="spearman", cluster_rows=T, cluster_cols=T,
cellwidth = 10, cellheight = 10, fontsize = 10,
color = colorRampPalette(c("navy", "white", "firebrick3"))(20),
scale="row", show_colnames=F,
annotation_col = annotation_col,
annotation_colors = ann_colors)
#输出pdf文件
pdf(file="heatmap.pdf")
p1<-pheatmap(df,method="spearman", cluster_rows=T, cluster_cols=T,
cellwidth = 10, cellheight = 10, fontsize = 10,
color = colorRampPalette(c("navy", "white", "firebrick3"))(20),
scale="row", show_colnames=F,
annotation_col = annotation_col,
annotation_colors = ann_colors)
dev.off()
#source("https://bioconductor.org/biocLite.R")
#biocLite("msa")
require(msa)
#输入文件
#借用msa自带的exampleAA.fasta
mySequenceFile <- system.file("examples", "exampleAA.fasta", package="msa")
mySequences <- readAAStringSet(mySequenceFile)
#自己的fasta文件读入方式：
#mySequences <- readAAStringSet("file.fa")
#多序列比对
myFirstAlignment <- msa(mySequences)
#输出pdf文件
msaPrettyPrint(myFirstAlignment, output="pdf",
paperWidth=15, paperHeight=10,
showNames="right",showLogo="none", showNumbering="none",
showConsensus = "none",
askForOverwrite=FALSE, verbose=FALSE)
#install.packages(c("seqinr","ape"))
#用多序列比对的结果计算距离
require(seqinr)
myAlignment <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(myAlignment, "identity")
#构建NJ树
require(ape)
tree <- nj(d)
#画树并输出到PDF文件ggtree.pdf
require(ggtree)
p2 <- ggtree(tree, layout='circular') + geom_tiplab2(size=3, offset=.1) + xlim(-.2, 3)
p2
#输出pdf文件
pdf(file="ggtree.pdf")
p2
dev.off()
data(dune)
library(vegan)
data(dune)
dune
View(dune)
ord <- metaMDS(dune)
ord
plot(ord)
View(ord)
ord$distance
dun
dune
size(dune)
nmds <- read.delim("H:\Spring_Documents\1. running_proj\2016-5-29 microbiota analysis of two soils\2016-6-8 analysis\Nmds\338F_806R\1\nmds_bray_curtis_group_sites.xls")
nmds <- read.delim("H:/Spring_Documents/1. running_proj/2016-5-29 microbiota analysis of two soils/2016-6-8 analysis/Nmds/338F_806R/1/nmds_bray_curtis_group_sites.xls")
require(cowplot)
View(nmds)
ggplot(nmds,aes(x = MDS1, y=MDS)) + geom_point()
nmds
ggplot(data = nmds,aes(x = MDS1, y=MDS)) + geom_point()
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point()
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(size=5)
nmds$label <- c("D1a","D2a","D4a","D7a","D1b","D2b","D4b","D7b")
nmds$group <- c(rep("A",4),rep("B",4))
nmds
nmds$day <- rep(c("1","2","4","7"),2)
nmds
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(size=5,color=day)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label))
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=.5,vjust=.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=5,vjust=.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=5,vjust=1)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=1,vjust=1)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=1.5,vjust=1.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-1.5,vjust=1.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-1.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5)+xlim(c(-.4,.3))
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5)+xlim(c(-0.4,0.3))
nmds
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5) + xlim(c(-0.4,0.3))
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5) + xlim(-0.4,0.3)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day),size=5) + geom_label(aes(label=label),hjust=-.5) + xlim(-0.4,0.4)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,group=group),size=5) + geom_label(aes(label=label),hjust=-.5) + xlim(-0.4,0.3)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=5) + geom_label(aes(label=label),hjust=-.5) + xlim(-0.4,0.3)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=5) + geom_label(aes(label=label),hjust=-.5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=5)
nmds$group <- c(rep("a",4),rep("b",4))
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=5)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=3)
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=3) + theme_cowplot()
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=3) + theme(line = 2)
colnames(nmds) <- c("NMDS1","NMDS2","label","Group","Day")
ggplot(data = nmds,aes(x = MDS1, y=MDS2)) + geom_point(aes(color=day,shape=group),size=3) + theme(axis.line = element_line(colour = "black",size=3))
ggplot(data = nmds,aes(x = NMDS1, y=NMDS2)) + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=3))
ggplot(data = nmds,aes(x = NMDS1, y=NMDS2)) + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5))
ggplot(data = nmds,aes(x = NMDS1, y=NMDS2)) + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5)) + xlim(-0.4,0.4)
pcoa <- read.delim("H:/Spring_Documents/1. running_proj/2016-5-29 microbiota analysis of two soils/2016-6-8 analysis/Pcoa/338F_806R/1/pcoa_bray_curtis_group_sites.xls")
pcoa
pcoa$Group <- c(rep("a",4),rep("b",4))
pcoa$Day <- rep(c("1","2","4","7"),2)
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5))
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5)) + xlab("PC1 (63.9%)")
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5)) + xlab("PC1 (63.9%)") + ylab("PC2 (13.1%)")
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5),tick.label = element_text(face="bold")) + xlab("PC1 (63.9%)") + ylab("PC2 (13.1%)")
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5),axis.tick = element_text(face="bold")) + xlab("PC1 (63.9%)") + ylab("PC2 (13.1%)")
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5),axis.ticks = element_text(face="bold")) + xlab("PC1 (63.9%)") + ylab("PC2 (13.1%)")
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "black",size=5),axis.text = element_text(face="bold")) + xlab("PC1 (63.9%)") + ylab("PC2 (13.1%)")
ggplot(data=pcoa,mapping = aes(x=PC1,y=PC2))  + geom_point(aes(color=Day,shape=Group),size=3) + theme(axis.line = element_line(colour = "red",size=5),axis.text = element_text(face="bold")) + xlab("PC1 (63.9%)") + ylab("PC2 (13.1%)")
nmds <- read.delim("H:/Spring_Documents/1. running_proj/2016-5-29 microbiota analysis of two soils/2016-6-8 analysis/Nmds/338F_806R/1/nmds_bray_curtis_group_sites.xls")
nmds$Group <- c(rep("a",4),rep("b",4))
nmds$Day <- rep(c("1","2","4","7"),2)
colnames(nmds) <- c("NMDS1","NMDS2","label","Group","Day")
ggplot(data = nmds,aes(x = NMDS1, y=NMDS2)) +
geom_point(aes(color=Day,shape=Group),size=3) +
theme(axis.line = element_line(colour = "black",size=5)) +
xlim(-0.4,0.4)
colnames(nmds) <- c("NMDS1","NMDS2","Group","Day")
ggplot(data = nmds,aes(x = NMDS1, y=NMDS2)) +
geom_point(aes(color=Day,shape=Group),size=3) +
theme(axis.line = element_line(colour = "black",size=5)) +
xlim(-0.4,0.4)
pcoa <- read.delim("H:/Spring_Documents/1. running_proj/2016-5-29 microbiota analysis of two soils/2016-6-8 analysis/Pcoa/338F_806R/1/pcoa_bray_curtis_group_sites.xls")
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale('LC_ALL','C')
setwd("H:/Spring_Work/35. Data/2018-4-3 ggtree")
library(ggtree)
tree$tip.label <- gsub("(OTU\\d+)_.*","\\1",tree$tip.label,perl=TRUE)
tree <- read.tree(file="otu_reps-isolates.nwk")
tree$tip.label <- gsub("(OTU\\d+)_.*","\\1",tree$tip.label,perl=TRUE)
tree$tip.label <- gsub("^.*?_","",tree$tip.label)
tree$tip.label <- gsub("_"," ",tree$tip.label)
tree$species <- tree$tip.label
tree$tip.label <- gsub(".*sp\\.\\s","",tree$tip.label,perl=TRUE)
knitr::opts_chunk$set(echo = TRUE)
## set root dir
knitr::opts_knit$set(root.dir = "H:/Spring_Work/35. Data/2018-4-3 ggtree")
library(ggplot2)
library(ggtree)
library(treeio)
library(ggtree)
tree <- read.tree(file="otu_reps-isolates.nwk")
tree$tip.label <- gsub("(OTU\\d+)_.*","\\1",tree$tip.label,perl=TRUE)
tree$tip.label <- gsub("^.*?_","",tree$tip.label)
tree$tip.label <- gsub("_"," ",tree$tip.label)
tree$species <- tree$tip.label
tree$tip.label <- gsub(".*sp\\.\\s","",tree$tip.label,perl=TRUE)
write.tree(tree,file = "otu.tree")
library(ggtree)
library(ape)
library(msa)
library(pheatmap)
sessionInfo()
citation(ape)
citation(ggtree)
citation("ggtree)"
)
citation("ggtree")
citation(c("ggtree","ape","msa","pheatmap"))
citation("ggtree","ape","msa","pheatmap")
citation("ape","msa","pheatmap")
citation("pheatmap")
citation("msa")
citation("ape")
1.5L
1L
2L
2.2L
typeof(1.5L)
is.finite(c(0,Inf,-Inf,NaN,NA))
is.infinite(c(0,Inf,-Inf,NaN,NA))
is.na(c(0,Inf,-Inf,NaN,NA))
is.nan(c(0,Inf,-Inf,NaN,NA))
!is.infinite(c(0,Inf,-Inf,NaN,NA))
!(is.infinite(c(0,Inf,-Inf,NaN,NA)))
is.finite(c(0,Inf,-Inf,NaN,NA)) -> a
!a
is.infinite(c(0,Inf,-Inf,NaN,NA)) -> a
!a
a
class(a)
type(a)
typeof(a)
typeof(a[[4]])
a[[4]]
c(1.5,"a")
c(1.5,2L)
c("a",1.5,2L)
names(c(1,2,3))
names(c(1,2,3)) <- c("a","b","c")
names(c(1,2,3))
names(c(1,2,3)) <- "a"
c("a","b","c")
names(c(1,2,3)) <- c("a","b","c")
names(c(1,2,3)) <- as.character(c("a","b","c"))
d <- data.frame(names=c("a","b"),value=c(1,2))
d
v <- d[2]
v
names(v)
v <- d[,2]
v
names(v)
names(v) <- d[,1]
d[,1]
v
c(1,2,3)
c(1,2,3) -> a
c("a","b","c") ->b
a
b
names(a) <- b
a
names(c(1,2,3)) <- c("a","b","c")
a[1
]
[
`[`
library(vegan)
data(dune)
plot(dune.ano)
data(dune.env)
dun
dune
dune.env
dune
adonis(dune~Management*A1,data = dune.env)
adonis(dune~A1*Management,data = dune.env)
adonis(dune~A1*Management,data = dune.env,by=NULL)
adonis(dune~Management*A1,data = dune.env,by=NULL)
adonis2(dune~Management*A1,data = dune.env)
adonis2(dune~A1*Management,data = dune.env)
adonis2(dune~Management*A1,data = dune.env,by="margin")
adonis2(dune~A1*Management,data = dune.env,by="margin")
adonis2(dune~A1*Management,data = dune.env,by=NULL)
adonis2(dune~Management*A1,data = dune.env,by=NULL)
dune.env
devtools::install_github("GuangchuangYu/biobabble")
library(biobabble)
data("lecture")
library(ggplot2)
ggplot(lecture,aes(x,y))+geom_point()+theme_bw()
if(!isTRUE(require("bibliometrix"))){devtools::install_github("massimoaria/bibliometrix")}
library(bibliometrix)
# Installation of some useful packages
if(!isTRUE(require("prettydoc"))){install.packages("prettydoc")}
# Installation of some useful packages
if(!isTRUE(require("prettydoc"))){install.packages("prettydoc")}
if(!isTRUE(require("rio"))){install.packages("rio")}
library(prettydoc)
library(rio)
Sys.getlocale()
Sys.setlocale("LC_ALL","en_US")
sessionInfo()
options(useFancyQuotes = F)
library(prettydoc)
if(!isTRUE(require("rio"))){install.packages("rio")}
# Loading txt or bib files into R environment
D <- readFiles("H:/Spring_Work/36. Codes/bibliometrix/pathogen_detecting_tool.bib")
# Converting the loaded files into a R bibliographic dataframe
M <- convert2df(D, dbsource="isi",format="plaintext")
# Converting the loaded files into a R bibliographic dataframe
M <- convert2df(D, dbsource="isi",format="bibtex")
# options(width=160)
results <- biblioAnalysis(M)
summary(results, k=10, pause=F, width=130)
plot(x=results, k=10, pause=F)
CR <- citations(M, field = "article", sep = ";")
cbind(CR$Cited[1:20])
NetMatrix <- biblioNetwork(M, analysis = "co-citation", network = "references", sep = ";")
net=networkPlot(NetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=0.7,edgesize = 10, edges.min=5)
library(DESeq2)
rvcheck::update_all()
install.packages("BiocManager")
BiocManager::install()
BiocManager::install()
BiocManager::install()
packageVersion(pkg)
pkg <- "BiocManager"
packageVersion(pkg)
getRversion()
r_ver <- getRversion()
if (r_ver < "3.5"){NULL}
("3.4.2" < "3.5")
3588*36+14900
3530*24+31500
14.25*.35
49900 + 5147*18
116220+10844+3999
116720+10844+3999
107000 + 11015 + 3427 + 4000 + 700
120000 + 4700
400/24
setwd("H:/Spring_Work/36. Codes/bibliometrix/")
fast5k <- readr::read_tsv("5K.txt")
field <- colnames(fast5k)
na_field <- apply(fast5k,2,function(x){all(is.na(x))})
field <- field[!na_field]
fast5k <- fast5k[field]
M <- as.data.frame(fast5k)
M$DB <- "isi"   # Database
M$JI <- M$SO    # Journal abbreviation
# M$C1 <- "none"  # Author address
M$DE <- "Keyword"        # Keywords
dbsource <- "isi"
if ("PY" %in% names(M)){M$PY=as.numeric(M$PY)} else {M$PY=NA}
if ("TC" %in% names(M)){M$TC=as.numeric(M$TC)} else {M$TC=NA}
if (!("CR" %in% names(M))){M$CR="none"}
if (dbsource!="cochrane"){M$AU=gsub(intToUtf8(8217),intToUtf8(39),M$AU)}
### SR field creation
suppressWarnings(M <- metaTagExtraction(M, Field="SR")) # using author, year, and journal
library(bibliometrix)
# Installation of some useful packages
if(!isTRUE(require("prettydoc"))){install.packages("prettydoc")}
if(!isTRUE(require("rio"))){install.packages("rio")}
library(prettydoc)
library(rio)
# Stable version from CRAN (Comprehensive R Archive Network)
# if you need to execute the code, remove # from the beginning of the next line
# install.packages("bibliometrix")
# Most updated version from GitHub
# if you need to execute the code, remove # from the beginning of the next lines
# install.packages("devtools")
if(!isTRUE(require("bibliometrix"))){devtools::install_github("massimoaria/bibliometrix")}
library(bibliometrix)
# Loading txt or bib files into R environment
D <- readFiles("H:/Spring_Work/36. Codes/bibliometrix/pathogen_detecting_tool.bib")
# Converting the loaded files into a R bibliographic dataframe
M <- convert2df(D, dbsource="isi",format="bibtex")
setwd("H:/Spring_Work/36. Codes/bibliometrix/")
library(bibliometrix)
fast5k <- readr::read_tsv("5K.txt")
field <- colnames(fast5k)
na_field <- apply(fast5k,2,function(x){all(is.na(x))})
field <- field[!na_field]
fast5k <- fast5k[field]
M <- as.data.frame(fast5k)
M$DB <- "isi"   # Database
M$JI <- M$SO    # Journal abbreviation
# M$C1 <- "none"  # Author address
M$DE <- "Keyword"        # Keywords
dbsource <- "isi"
if ("PY" %in% names(M)){M$PY=as.numeric(M$PY)} else {M$PY=NA}
if ("TC" %in% names(M)){M$TC=as.numeric(M$TC)} else {M$TC=NA}
if (!("CR" %in% names(M))){M$CR="none"}
if (dbsource!="cochrane"){M$AU=gsub(intToUtf8(8217),intToUtf8(39),M$AU)}
### SR field creation
suppressWarnings(M <- metaTagExtraction(M, Field="SR")) # using author, year, and journal
## AU normalization
M$AU=unlist(lapply(strsplit(M$AU,";"), function(x){
x=trimws(trimES(gsub("[[:punct:]]"," ",x)))
x=paste(x,collapse=";")
}))
### identify duplicated SRs
SR=M$SR
tab=table(SR)
tab2=table(tab)
ind=as.numeric(names(tab2))
ind=ind[which(ind>1)]
if (length(ind)>0){
for (i in ind){
indice=names(which(tab==i))
for (j in indice){
indice2=which(SR==j)
SR[indice2]=paste(SR[indice2],as.character(1:length(indice2)),sep=" ")
}
}
}
row.names(M) <- SR
# options(width=160)
results <- biblioAnalysis(M)
summary(results, k=10, pause=F, width=130) #
# options(width=160)
results <- biblioAnalysis(M)
#summary(results, k=10, pause=F, width=130) #
plot(x=results, k=10, pause=F)
CR <- citations(M, field = "article", sep = ";")
M$CR
M$TC
NetMatrix <- biblioNetwork(M, analysis = "co-occurrences", network = "keywords", sep = ";")
?readFiles
setwd("H:/Spring_Work/36. Codes/bibliometrix/")
setwd("H:/Spring_Work/36. Codes/bibliometrix/")
getwd
getwd()
D <- readFiles("biofilm_phage.bib")
# Converting the loaded files into a R bibliographic dataframe
M <- convert2df(D, dbsource="isi",format="bibtex")
# options(width=160)
results <- biblioAnalysis(M)
#summary(results, k=10, pause=F, width=130) #
plot(x=results, k=10, pause=F)
# options(width=160)
results <- biblioAnalysis(M)
summary(results, k=10, pause=F, width=130) #
plot(x=results, k=10, pause=F)
CR <- citations(M, field = "article", sep = ";")
cbind(CR$Cited[1:20])
NetMatrix <- biblioNetwork(M, analysis = "co-citation", network = "references", sep = ";")
net=networkPlot(NetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=0.7,edgesize = 10, edges.min=5)
netstat <- networkStat(NetMatrix)
summary(netstat,k=10)
M=metaTagExtraction(M,"CR_SO",sep=";")
NetMatrix <- biblioNetwork(M, analysis = "co-citation", network = "sources", sep = ";")
net=networkPlot(NetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=0.7,edgesize = 10, edges.min=5)
NetMatrix <- biblioNetwork(M, analysis = "co-occurrences", network = "keywords", sep = ";")
net=networkPlot(NetMatrix, normalize="association", n = 50, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=F, edgesize = 10, labelsize=3,label.cex=TRUE,label.n=30,edges.min=2)
CS <- conceptualStructure(M, method="CA", field="ID", minDegree=10, k.max = 8, stemming=f, labelsize=8,documents=20)
NetMatrix <- biblioNetwork(M, analysis = "co-occurrences",network = "keywords", sep = ";")
S <- normalizeSimilarity(NetMatrix, type = "association")
net1 <- networkPlot(S, n=500, Title = "Keyword co-occurrences",type="fruchterman",
labelsize = 2, halo = F, cluster = "walktrap",remove.isolates=FALSE,
remove.multiple=FALSE, noloops=TRUE, weighted=TRUE,label.cex=T,edgesize=5, size=1,edges.min = 2)
Clusters=Map$words[order(Map$words$Cluster,-Map$words$Occurrences),]
